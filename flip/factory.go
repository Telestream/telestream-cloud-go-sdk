/*
 * Flip API
 *
 * Description
 *
 * API version: 2.0.1
 * Contact: cloudsupport@telestream.net
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package flip

type Factory struct {

	// A unique identifier of a Factory.
	Id string `json:"id,omitempty"`

	// Human-readable identifier of a Factory.
	Name string `json:"name,omitempty"`

	// A region where the factory is located.
	FactoryRegion string `json:"factory_region,omitempty"`

	// A bucket where processed files will be stored.
	OutputBucketName string `json:"output_bucket_name,omitempty"`

	// Specify if your files are public or private (private files need authorization url to access). By default this is not set.
	Acl string `json:"acl,omitempty"`

	// A date and time when a Factory has been created.
	CreatedAt string `json:"created_at,omitempty"`

	// A date and time when a Factory has been updated last time.
	UpdatedAt string `json:"updated_at,omitempty"`

	// An URL pointing to the output_bucket_name.
	Url string `json:"url,omitempty"`

	// Specify if you want to use multi-factor server-side 256-bit AES-256 data encryption with Amazon S3-managed encryption keys (SSE-S3). Each object is encrypted using a unique key which as an additional safeguard is encrypted itself with a master key that S3 regularly rotates. By default this is not set.
	ServerSideEncryption bool `json:"server_side_encryption,omitempty"`

	// A name of an input bucket.
	InputBucketName string `json:"input_bucket_name,omitempty"`

	// Determines whether the Factory should be notified about new files added to the input bucket.
	InputBucketWatch bool `json:"input_bucket_watch,omitempty"`

	InputBucketFilesMap *interface{} `json:"input_bucket_files_map,omitempty"`

	// Determines how often the input bucket is synchronised.
	InputBucketSyncEveryNMin string `json:"input_bucket_sync_every_n_min,omitempty"`

	InputBucketRecursive string `json:"input_bucket_recursive,omitempty"`

	// A pattern that will be used to locate files in the input bucket. Valid wildcards might be used.
	InputBucketFilePattern string `json:"input_bucket_file_pattern,omitempty"`

	OutputsPathFormat string `json:"outputs_path_format,omitempty"`

	// Specifies which storage provider the factory should use. Available options: S3: 0, Google Cloud Storage: 1, FTP storage: 2, Google Cloud Interoperability Storage: 5, Flip storage: 7, FASP storage: 8, Azure Blob Storage: 9
	StorageProvider int32 `json:"storage_provider,omitempty"`

	ProviderSpecificSettings *interface{} `json:"provider_specific_settings,omitempty"`
}
